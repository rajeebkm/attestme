/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SchemaRegistry,
  SchemaRegistryInterface,
} from "../../contracts/SchemaRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "registerer",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "contract ISchemaResolver",
            name: "resolver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "string",
            name: "schema",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct SchemaRecord",
        name: "schema",
        type: "tuple",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "uid",
        type: "bytes32",
      },
    ],
    name: "getSchema",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "uid",
            type: "bytes32",
          },
          {
            internalType: "contract ISchemaResolver",
            name: "resolver",
            type: "address",
          },
          {
            internalType: "bool",
            name: "revocable",
            type: "bool",
          },
          {
            internalType: "string",
            name: "schema",
            type: "string",
          },
        ],
        internalType: "struct SchemaRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "schema",
        type: "string",
      },
      {
        internalType: "contract ISchemaResolver",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bool",
        name: "revocable",
        type: "bool",
      },
    ],
    name: "register",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e0604052348015600f57600080fd5b5060016003600082608081815250508160a081815250508060c0818152505050505060805160a05160c05161104a61005e600039600061011d0152600060f40152600060cb015261104a6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d501461004657806360d7a27814610064578063a2ea7c6e14610094575b600080fd5b61004e6100c4565b60405161005b91906107ba565b60405180910390f35b61007e600480360381019061007991906108f3565b610167565b60405161008b9190610980565b60405180910390f35b6100ae60048036038101906100a991906109c7565b61034d565b6040516100bb9190610b1e565b60405180910390f35b60606100ef7f0000000000000000000000000000000000000000000000000000000000000000610486565b6101187f0000000000000000000000000000000000000000000000000000000000000000610486565b6101417f0000000000000000000000000000000000000000000000000000000000000000610486565b60405160200161015393929190610bc8565b604051602081830303815290604052905090565b60008060405180608001604052806000801b81526020018573ffffffffffffffffffffffffffffffffffffffff168152602001841515815260200187878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815250905060006101f782610554565b90506000801b600080838152602001908152602001600020600001541461024a576040517f23369fa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80826000018181525050816000808381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690831515021790555060608201518160020190816102ed9190610e4a565b509050503373ffffffffffffffffffffffffffffffffffffffff16817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e846040516103389190610b1e565b60405180910390a38092505050949350505050565b6103556106e7565b600080838152602001908152602001600020604051806080016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff161515151581526020016002820180546103fd90610c6d565b80601f016020809104026020016040519081016040528092919081815260200182805461042990610c6d565b80156104765780601f1061044b57610100808354040283529160200191610476565b820191906000526020600020905b81548152906001019060200180831161045957829003601f168201915b5050505050815250509050919050565b60606000600161049584610594565b01905060008167ffffffffffffffff8111156104b4576104b3610c0f565b5b6040519080825280601f01601f1916602001820160405280156104e65781602001600182028036833780820191505090505b509050600082602001820190505b600115610549578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161053d5761053c610f1c565b5b049450600085036104f4575b819350505050919050565b600081606001518260200151836040015160405160200161057793929190610fdb565b604051602081830303815290604052805190602001209050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106105f2577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816105e8576105e7610f1c565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061062f576d04ee2d6d415b85acef8100000000838161062557610624610f1c565b5b0492506020810190505b662386f26fc10000831061065e57662386f26fc10000838161065457610653610f1c565b5b0492506010810190505b6305f5e1008310610687576305f5e100838161067d5761067c610f1c565b5b0492506008810190505b61271083106106ac5761271083816106a2576106a1610f1c565b5b0492506004810190505b606483106106cf57606483816106c5576106c4610f1c565b5b0492506002810190505b600a83106106de576001810190505b80915050919050565b604051806080016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001606081525090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610764578082015181840152602081019050610749565b60008484015250505050565b6000601f19601f8301169050919050565b600061078c8261072a565b6107968185610735565b93506107a6818560208601610746565b6107af81610770565b840191505092915050565b600060208201905081810360008301526107d48184610781565b905092915050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f84011261080b5761080a6107e6565b5b8235905067ffffffffffffffff811115610828576108276107eb565b5b602083019150836001820283011115610844576108436107f0565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108768261084b565b9050919050565b60006108888261086b565b9050919050565b6108988161087d565b81146108a357600080fd5b50565b6000813590506108b58161088f565b92915050565b60008115159050919050565b6108d0816108bb565b81146108db57600080fd5b50565b6000813590506108ed816108c7565b92915050565b6000806000806060858703121561090d5761090c6107dc565b5b600085013567ffffffffffffffff81111561092b5761092a6107e1565b5b610937878288016107f5565b9450945050602061094a878288016108a6565b925050604061095b878288016108de565b91505092959194509250565b6000819050919050565b61097a81610967565b82525050565b60006020820190506109956000830184610971565b92915050565b6109a481610967565b81146109af57600080fd5b50565b6000813590506109c18161099b565b92915050565b6000602082840312156109dd576109dc6107dc565b5b60006109eb848285016109b2565b91505092915050565b6109fd81610967565b82525050565b6000819050919050565b6000610a28610a23610a1e8461084b565b610a03565b61084b565b9050919050565b6000610a3a82610a0d565b9050919050565b6000610a4c82610a2f565b9050919050565b610a5c81610a41565b82525050565b610a6b816108bb565b82525050565b600082825260208201905092915050565b6000610a8d8261072a565b610a978185610a71565b9350610aa7818560208601610746565b610ab081610770565b840191505092915050565b6000608083016000830151610ad360008601826109f4565b506020830151610ae66020860182610a53565b506040830151610af96040860182610a62565b5060608301518482036060860152610b118282610a82565b9150508091505092915050565b60006020820190508181036000830152610b388184610abb565b905092915050565b600081905092915050565b6000610b568261072a565b610b608185610b40565b9350610b70818560208601610746565b80840191505092915050565b7f2e00000000000000000000000000000000000000000000000000000000000000600082015250565b6000610bb2600183610b40565b9150610bbd82610b7c565b600182019050919050565b6000610bd48286610b4b565b9150610bdf82610ba5565b9150610beb8285610b4b565b9150610bf682610ba5565b9150610c028284610b4b565b9150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610c8557607f821691505b602082108103610c9857610c97610c3e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610cc3565b610d0a8683610cc3565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610d47610d42610d3d84610d22565b610a03565b610d22565b9050919050565b6000819050919050565b610d6183610d2c565b610d75610d6d82610d4e565b848454610cd0565b825550505050565b600090565b610d8a610d7d565b610d95818484610d58565b505050565b5b81811015610db957610dae600082610d82565b600181019050610d9b565b5050565b601f821115610dfe57610dcf81610c9e565b610dd884610cb3565b81016020851015610de7578190505b610dfb610df385610cb3565b830182610d9a565b50505b505050565b600082821c905092915050565b6000610e2160001984600802610e03565b1980831691505092915050565b6000610e3a8383610e10565b9150826002028217905092915050565b610e538261072a565b67ffffffffffffffff811115610e6c57610e6b610c0f565b5b610e768254610c6d565b610e81828285610dbd565b600060209050601f831160018114610eb45760008415610ea2578287015190505b610eac8582610e2e565b865550610f14565b601f198416610ec286610c9e565b60005b82811015610eea57848901518255600182019150602085019450602081019050610ec5565b86831015610f075784890151610f03601f891682610e10565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160601b9050919050565b6000610f6382610f4b565b9050919050565b6000610f7582610f58565b9050919050565b610f8d610f8882610a41565b610f6a565b82525050565b60008160f81b9050919050565b6000610fab82610f93565b9050919050565b6000610fbd82610fa0565b9050919050565b610fd5610fd0826108bb565b610fb2565b82525050565b6000610fe78286610b4b565b9150610ff38285610f7c565b6014820191506110038284610fc4565b60018201915081905094935050505056fea26469706673582212201069c1b651a558f9721201d5e62ab9578582dd4f20a7fc120252d1540b78571864736f6c634300081a0033";

type SchemaRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchemaRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SchemaRegistry__factory extends ContractFactory {
  constructor(...args: SchemaRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SchemaRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SchemaRegistry__factory {
    return super.connect(runner) as SchemaRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchemaRegistryInterface {
    return new Interface(_abi) as SchemaRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SchemaRegistry {
    return new Contract(address, _abi, runner) as unknown as SchemaRegistry;
  }
}
